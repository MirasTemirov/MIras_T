import sqlite3

class PhoneBook:
    def __init__(self, db_path):
        self.db_path = db_path
        self.connection = sqlite3.connect(db_path)
        self.cursor = self.connection.cursor()
        
        # Create table if it doesn't exist
        self.cursor.execute('''
            CREATE TABLE IF NOT EXISTS phonebook (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                name TEXT,
                phone TEXT
            )
        ''')
        self.connection.commit()
        
    def add_contact(self, name, phone):
        # Insert data into the table
        self.cursor.execute('INSERT INTO phonebook (name, phone) VALUES (?, ?)', (name, phone))
        self.connection.commit()
        print('Contact added successfully.')
        
    def add_contacts_from_csv(self, file_path):
        with open(file_path, 'r') as f:
            lines = f.readlines()
            for line in lines:
                name, phone = line.strip().split(',')
                self.add_contact(name, phone)
        print('Contacts added successfully.')
        
    def update_contact(self, name, new_name=None, new_phone=None):
        # Update data in the table
        update_query = 'UPDATE phonebook SET '
        if new_name:
            update_query += f"name = '{new_name}'"
        if new_phone:
            update_query += f"phone = '{new_phone}'"
        update_query += f" WHERE name = '{name}'"
        self.cursor.execute(update_query)
        self.connection.commit()
        print('Contact updated successfully.')
        
    def delete_contact(self, identifier):
        # Delete data from the table
        delete_query = f"DELETE FROM phonebook WHERE name = '{identifier}' OR phone = '{identifier}'"
        self.cursor.execute(delete_query)
        self.connection.commit()
        print('Contact deleted successfully.')
        
    def get_contacts(self, filters=None):
        # Get data from the table with optional filters
        select_query = 'SELECT * FROM phonebook'
        if filters:
            select_query += ' WHERE ' + ' AND '.join(f"{k}='{v}'" for k, v in filters.items())
        self.cursor.execute(select_query)
        results = self.cursor.fetchall()
        if results:
            print('Contacts:')
            for result in results:
                print(result)
        else:
            print('No contacts found.')


This implementation allows for adding contacts one by one via console, or uploading multiple contacts at once from a CSV file. Updating, deleting, and querying contacts can also be done through console commands, with the ability to specify filters for more specific results.

Here's an example usage:
phonebook = PhoneBook('phonebook.db')

# Add contacts one by one
phonebook.add_contact('John', '555-1234')
phonebook.add_contact('Jane', '555-5678')

# Add contacts from a CSV file
phonebook.add_contacts_from_csv('contacts.csv')

# Update a contact's phone number
phonebook.update_contact('John', new_phone='555-4321')

# Delete a contact by name
phonebook.delete_contact('Jane')

# Get all contacts
phonebook.get_contacts()

# Get contacts with name starting with 'J'
phonebook.get_contacts(filters={'name': 'J%'})
